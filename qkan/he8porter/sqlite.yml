he8_attach: "
ATTACH DATABASE '{filnam}' AS he"

he8_insert_entwaesserungsarten: "
INSERT INTO entwaesserungsarten (
bezeichnung, kuerzel, bemerkung, he_nr, kp_nr, m150, isybau, transport, druckdicht)
SELECT ?, ?, ?, ?, ?, ?, ?, ?, ?
WHERE ? NOT IN (SELECT bezeichnung FROM entwaesserungsarten)"

he8_insert_haltungstypen: "
INSERT INTO haltungstypen (bezeichnung, bemerkung)
SELECT ?, ?
WHERE ? NOT IN (SELECT bezeichnung FROM haltungstypen)"

he8_insert_profile: "
INSERT INTO profile (profilnam, he_nr, mu_nr, kp_key)
SELECT ?, ?, ?, ?
WHERE ? NOT IN (SELECT profilnam FROM profile)"

he8_insert_pumpentypen: "
INSERT INTO pumpentypen (bezeichnung, he_nr)
SELECT ?, ?
WHERE ? NOT IN (SELECT bezeichnung FROM pumpentypen)"

he8_insert_simulationsstatus: "
INSERT INTO simulationsstatus (bezeichnung, kuerzel, he_nr, mu_nr, kp_nr, isybau, m150, m145, kommentar)
SELECT
    :bezeichnung, :kuerzel, :he_nr, :mu_nr, :kp_nr, 
    :isybau, :m150, :m145, :kommentar
WHERE :bezeichnung NOT IN (SELECT bezeichnung FROM simulationsstatus)"

he8_insert_schaechte: "
WITH ea AS (
    SELECT 
        bezeichnung, 
        he_nr, 
        CASE WHEN transport IS NULL THEN 0 ELSE transport END AS transport, 
        CASE WHEN druckdicht IS NULL THEN 0 ELSE druckdicht END AS druckdicht
    FROM entwaesserungsarten 
    WHERE he_nr IS NOT NULL
    GROUP BY he_nr, transport, druckdicht
)
INSERT INTO schaechte (
    schnam, xsch, ysch, 
    sohlhoehe, deckelhoehe, 
    durchm, 
    druckdicht, 
    entwart, schachttyp, simstatus, 
    kommentar, createdat, geop, geom
)
SELECT 
    sh.Name AS schnam,
    x(sh.Geometry) AS xsch, 
    y(sh.Geometry) AS ysch, 
    sh.Sohlhoehe AS sohlhoehe, 
    sh.Deckelhoehe AS deckelhoehe, 
    sh.Durchmesser/1000. AS durchm, 
    sh.Druckdichterdeckel AS druckdicht, 
    ea.bezeichnung AS entwart, 
    'Schacht' AS schachttyp,
    si.bezeichnung AS simstatus, 
    sh.Kommentar AS kommentar, 
    sh.Lastmodified AS createdat,
    SetSRID(sh.Geometry, :epsg) AS geop,
    CastToMultiPolygon(MakePolygon(MakeCircle(x(sh.Geometry),
                                              y(sh.Geometry),
                                              coalesce(sh.Durchmesser/1000.0, 1.0),
                                              :epsg)
                       )
    ) AS geom
FROM he.Schacht AS sh
LEFT JOIN ea 
ON ea.he_nr = sh.Kanalart AND 
    sh.DruckdichterDeckel = ea.druckdicht AND
    ea.transport = 0 
LEFT JOIN simulationsstatus AS si 
ON si.he_nr = sh.Planungsstatus
LEFT JOIN schaechte AS sq
ON sh.Name = sq.schnam
WHERE sq.pk IS NULL"

he8_insert_auslaesse: "
INSERT INTO schaechte (
    schnam, xsch, ysch, 
    sohlhoehe, deckelhoehe, 
    schachttyp, simstatus, 
    kommentar, createdat, geop, geom
)
SELECT 
    sh.Name AS schnam,
    x(sh.Geometry) AS xsch, 
    y(sh.Geometry) AS ysch, 
    sh.Sohlhoehe AS sohlhoehe, 
    sh.Gelaendehoehe AS deckelhoehe, 
    'Auslass' AS schachttyp,
    si.bezeichnung AS simstatus,
    sh.Kommentar AS kommentar, 
    sh.Lastmodified AS createdat,
    SetSRID(sh.Geometry, :epsg) AS geop,
    CastToMultiPolygon(MakePolygon(MakeCircle(x(sh.Geometry),
                                              y(sh.Geometry),
                                              1.0,
                                              :epsg)
                       )
    ) AS geom
FROM he.Auslass AS sh
LEFT JOIN simulationsstatus AS si
ON si.he_nr = sh.Planungsstatus
LEFT JOIN schaechte AS sq
ON sh.Name = sq.schnam
WHERE sq.pk IS NULL"

he8_insert_speicher: "
INSERT INTO schaechte (
    schnam, xsch, ysch, 
    sohlhoehe, deckelhoehe, 
    schachttyp, simstatus, 
    kommentar, createdat, geop, geom
)
SELECT 
    sh.Name AS schnam,
    x(sh.Geometry) AS xsch, 
    y(sh.Geometry) AS ysch, 
    sh.Sohlhoehe AS sohlhoehe, 
    sh.Gelaendehoehe AS deckelhoehe, 
    'Speicher' AS schachttyp,
    si.bezeichnung AS simstatus,
    sh.Kommentar AS kommentar, 
    sh.Lastmodified AS createdat,
    SetSRID(sh.Geometry, :epsg) AS geop,
    CastToMultiPolygon(MakePolygon(MakeCircle(x(sh.Geometry),
                                              y(sh.Geometry),
                                              1.0,
                                              :epsg)
                       )
    ) AS geom
FROM he.Speicherschacht AS sh
LEFT JOIN simulationsstatus AS si
ON si.he_nr = sh.Planungsstatus
LEFT JOIN schaechte AS sq
ON sh.Name = sq.schnam
WHERE sq.pk IS NULL"

he8_insert_haltungen: "
WITH ea AS (
    SELECT 
        bezeichnung, 
        he_nr, 
        CASE WHEN transport IS NULL THEN 0 ELSE transport END AS transport, 
        CASE WHEN druckdicht IS NULL THEN 0 ELSE druckdicht END AS druckdicht
    FROM entwaesserungsarten 
    WHERE he_nr IS NOT NULL
    GROUP BY he_nr, transport, druckdicht
)
INSERT INTO haltungen (
    haltnam, schoben, schunten, 
    hoehe, breite, laenge, 
    sohleoben, sohleunten,
    haltungstyp,
    profilnam, entwart, 
    ks, simstatus,  
    kommentar, createdat, 
    geom
)
SELECT 
    ro.Name AS haltnam, 
    ro.Schachtoben AS schoben, 
    ro.Schachtunten AS schunten, 
    IIF(ro.Geometrie1>20, ro.Geometrie1, ro.Geometrie1*1000.) AS hoehe, 
    IIF(ro.Geometrie2>20, ro.Geometrie2, ro.Geometrie2*1000.) AS breite, 
    ro.Laenge AS laenge, 
    ro.SohlhoeheOben AS sohleoben, 
    ro.SohlhoeheUnten AS sohleunten, 
    'Haltung' AS haltungstyp, 
    CASE WHEN ro.Profiltyp = 68 
         THEN ro.Sonderprofilbezeichnung 
         ELSE pr.profilnam END AS profilnam, 
    ea.bezeichnung AS entwart, 
    ro.Rauigkeitsbeiwert AS ks, 
    si.bezeichnung AS simstatus,
    ro.Kommentar AS kommentar, 
    ro.Lastmodified AS createdat, 
    SetSRID(ro.Geometry, :epsg) AS geom
FROM he.Rohr AS ro
LEFT JOIN (SELECT he_nr, profilnam FROM profile WHERE he_nr <> 68 GROUP BY he_nr) AS pr
ON ro.Profiltyp = pr.he_nr
LEFT JOIN ea 
ON ea.he_nr = ro.Kanalart AND 
    ea.druckdicht = (ro.Abflussart % 2) AND
    ea.transport = ro.Transporthaltung 
LEFT JOIN simulationsstatus AS si 
ON si.he_nr = ro.Planungsstatus
LEFT JOIN haltungen AS ha
ON ha.haltnam = ro.Name
WHERE ha.pk IS NULL"

he8_insert_wehre: "
INSERT INTO haltungen (
    haltnam, schoben, schunten,
    hoehe, breite,
    sohleoben, sohleunten,
    haltungstyp,
    simstatus,
    kommentar, createdat, 
    geom)
SELECT 
    we.Name AS haltnam,
    we.Schachtoben AS schoben, 
    we.Schachtunten AS schunten,              
    IIF(we.Geometrie1>20, we.Geometrie1, we.Geometrie1*1000.) AS hoehe, 
    IIF(we.Geometrie2>20, we.Geometrie2, we.Geometrie2*1000.) AS breite,
    we.Schwellenhoehe AS sohleoben, 
    we.Schwellenhoehe AS sohleunten, 
    'Wehr' AS haltungstyp, 
    si.bezeichnung AS simstatus, 
    we.Kommentar AS kommentar, 
    we.Lastmodified AS createdat,
    SetSrid(we.Geometry, :epsg) AS geom
FROM he.Wehr AS we
LEFT JOIN (SELECT he_nr, profilnam FROM profile WHERE he_nr <> 68 GROUP BY he_nr) AS pr
ON we.Profiltyp = pr.he_nr
LEFT JOIN simulationsstatus AS si 
ON si.he_nr = we.Planungsstatus
LEFT JOIN haltungen AS ha
ON ha.haltnam = we.Name
WHERE ha.pk IS NULL"

he8_insert_pumpen: "
INSERT INTO haltungen (
    haltnam, schoben, schunten,
    hoehe,
    haltungstyp, 
    simstatus,
    kommentar, createdat, 
    geom)
SELECT 
    pu.Name AS haltnam,
    pu.Schachtoben AS schoben, 
    pu.Schachtunten AS schunten,
    0.3 AS hoehe,                   /* nur fuer Laengsschnitt */ 
    'Pumpe' AS haltungstyp, 
    si.bezeichnung AS simstatus, 
    pu.Kommentar AS kommentar, 
    pu.Lastmodified AS createdat,
    SetSrid(pu.Geometry, :epsg) AS geom
FROM he.Pumpe AS pu
LEFT JOIN simulationsstatus AS si 
ON si.he_nr = pu.Planungsstatus
LEFT JOIN haltungen AS ha
ON ha.haltnam = pu.Name
WHERE ha.pk IS NULL"

he8_insert_drosseln: "
INSERT INTO haltungen (
    haltnam, schoben, schunten,
    hoehe,
    haltungstyp, 
    simstatus,
    kommentar, createdat, 
    geom)
SELECT 
    dr.Name AS haltnam,
    dr.Schachtoben AS schoben, 
    dr.Schachtunten AS schunten, 
    dr.Sohlabstand AS hoehe, 
    'Drossel' AS haltungstyp, 
    si.bezeichnung AS simstatus, 
    dr.Kommentar AS kommentar, 
    dr.Lastmodified AS createdat,
    SetSrid(dr.Geometry, :epsg) AS geom
FROM he.Drossel AS dr
LEFT JOIN simulationsstatus AS si 
ON si.he_nr = dr.Planungsstatus
LEFT JOIN haltungen AS ha
ON ha.haltnam = dr.Name
WHERE ha.pk IS NULL"

he8_insert_schieber: "
INSERT INTO haltungen (
    haltnam, schoben, schunten,
    sohleoben, sohleunten,
    hoehe, breite,
    ks,
    profilnam,
    haltungstyp,
    simstatus,
    kommentar, createdat, 
    geom
)
SELECT 
    sr.Name AS haltnam,
    sr.Schachtoben AS schoben, 
    sr.Schachtunten AS schunten, 
    sr.Anfangsstellung AS sohleoben,
    sr.Anfangsstellung AS sohleunten,
    round(sr.MaximaleHubHoehe - sr.Anfangsstellung, 4) AS hoehe,
    sr.Geometrie2 AS breite, 
    sr.Verluste AS ks, 
    pr.profilnam AS profilnam, 
    'Schieber' AS haltungstyp, 
    si.bezeichnung AS simstatus, 
    sr.Kommentar AS kommentar, 
    sr.Lastmodified AS createdat,
    SetSrid(sr.Geometry, :epsg) AS geom
FROM he.Schieber AS sr
LEFT JOIN (SELECT he_nr, profilnam FROM profile WHERE he_nr <> 68 GROUP BY he_nr) AS pr
ON sr.Profiltyp = pr.he_nr
LEFT JOIN simulationsstatus AS si 
ON si.he_nr = sr.Planungsstatus
LEFT JOIN haltungen AS ha
ON ha.haltnam = sr.Name
WHERE ha.pk IS NULL"

he8_insert_qregler: "
WITH ea AS (
    SELECT 
        bezeichnung, 
        he_nr, 
        CASE WHEN transport IS NULL THEN 0 ELSE transport END AS transport, 
        CASE WHEN druckdicht IS NULL THEN 0 ELSE druckdicht END AS druckdicht
    FROM entwaesserungsarten 
    WHERE he_nr IS NOT NULL
    GROUP BY he_nr, transport, druckdicht
)
INSERT INTO haltungen (
    haltnam, schoben, schunten, 
    hoehe, breite, laenge, 
    sohleoben, sohleunten,
    profilnam, entwart, ks,
    haltungstyp, 
    simstatus,  
    kommentar, createdat, 
    geom
)
SELECT 
    qr.Name AS haltnam, 
    qr.Schachtoben AS schoben, 
    qr.Schachtunten AS schunten, 
    IIF(qr.Geometrie1>20, qr.Geometrie1, qr.Geometrie1*1000.) AS hoehe, 
    IIF(qr.Geometrie2>20, qr.Geometrie2, qr.Geometrie2*1000.) AS breite, 
    qr.Laenge AS laenge, 
    qr.SohlhoeheOben AS sohleoben, 
    qr.SohlhoeheUnten AS sohleunten, 
    pr.profilnam AS profilnam, 
    ea.bezeichnung AS entwart, 
    qr.Rauigkeitsbeiwert AS ks, 
    'Q-Regler' AS haltungstyp, 
    si.bezeichnung AS simstatus,
    qr.Kommentar AS kommentar, 
    qr.Lastmodified AS createdat, 
    SetSrid(qr.Geometry, :epsg) AS geom
FROM he.qRegler AS qr
LEFT JOIN (SELECT he_nr, profilnam FROM profile WHERE he_nr <> 68 GROUP BY he_nr) AS pr
ON qr.Profiltyp = pr.he_nr
LEFT JOIN ea 
ON ea.he_nr = qr.Kanalart AND 
    ea.druckdicht = (qr.Abflussart % 2) AND
    ea.transport = qr.Transporthaltung 
LEFT JOIN simulationsstatus AS si 
ON si.he_nr = qr.Planungsstatus
LEFT JOIN haltungen AS ha
ON ha.haltnam = qr.Name
WHERE ha.pk IS NULL"

he8_insert_hregler: "
WITH ea AS (
    SELECT 
        bezeichnung, 
        he_nr, 
        CASE WHEN transport IS NULL THEN 0 ELSE transport END AS transport, 
        CASE WHEN druckdicht IS NULL THEN 0 ELSE druckdicht END AS druckdicht
    FROM entwaesserungsarten 
    WHERE he_nr IS NOT NULL
    GROUP BY he_nr, transport, druckdicht
)
INSERT INTO haltungen (
    haltnam, schoben, schunten, 
    hoehe, breite, laenge, 
    sohleoben, sohleunten,
    profilnam, entwart, ks,
    haltungstyp,
    simstatus,
    kommentar, createdat, 
    geom
)
SELECT 
    hr.Name AS haltnam,
    hr.Schachtoben AS schoben,
    hr.Schachtunten AS schunten,
    IIF(hr.Geometrie1>20, hr.Geometrie1, hr.Geometrie1*1000.) AS hoehe,
    IIF(hr.Geometrie2>20, hr.Geometrie2, hr.Geometrie2*1000.) AS breite,
    hr.Laenge AS laenge,
    hr.SohlhoeheOben AS sohleoben,
    hr.SohlhoeheUnten AS sohleunten,
    pr.profilnam AS profilnam,
    ea.bezeichnung AS entwart,
    hr.Rauigkeitsbeiwert AS ks,
    'H-Regler' AS haltungstyp,
    si.bezeichnung AS simstatus,
    hr.Kommentar AS kommentar,
    hr.Lastmodified AS createdat,
    SetSrid(hr.Geometry, :epsg) AS geom
FROM he.hRegler AS hr
LEFT JOIN (SELECT he_nr, profilnam FROM profile WHERE he_nr <> 68 GROUP BY he_nr) AS pr
ON hr.Profiltyp = pr.he_nr
LEFT JOIN ea 
ON ea.he_nr = hr.Kanalart AND 
    ea.druckdicht = (hr.Abflussart % 2) AND
    ea.transport = hr.Transporthaltung 
LEFT JOIN simulationsstatus AS si 
ON si.he_nr = hr.Planungsstatus
LEFT JOIN haltungen AS ha
ON ha.haltnam = hr.Name
WHERE ha.pk IS NULL"

he8_insert_gusauslaesse: "
INSERT INTO haltungen (
    haltnam, schoben, schunten,
    sohleoben, sohleunten,
    hoehe, breite,
    ks,
    profilnam,
    haltungstyp,
    simstatus,  
    kommentar, createdat, 
    geom
)
SELECT 
    gs.Name AS haltnam, 
    gs.Schachtoben AS schoben, 
    gs.Schachtunten AS schunten,
    gs.HoeheUnterkante AS sohleoben, 
    gs.HoeheUnterkante AS sohleunten, 
    IIF(gs.Geometrie1>20, gs.Geometrie1, gs.Geometrie1*1000.) AS hoehe,
    IIF(gs.Geometrie2>20, gs.Geometrie2, gs.Geometrie2*1000.) AS breite,
    gs.Auslassbeiwert AS ks,
    pr.profilnam AS profilnam,
    'GrundSeitenauslass' AS haltungstyp, 
    si.bezeichnung AS simstatus,
    gs.Kommentar AS kommentar, 
    gs.Lastmodified AS createdat, 
    SetSRID(gs.Geometry, :epsg) AS geom
FROM he.grundseitenauslass AS gs
LEFT JOIN (SELECT he_nr, profilnam FROM profile WHERE he_nr <> 68 GROUP BY he_nr) AS pr
ON gs.Profiltyp = pr.he_nr
LEFT JOIN simulationsstatus AS si 
ON si.he_nr = gs.Planungsstatus
LEFT JOIN haltungen AS ha
ON ha.haltnam = gs.Name
WHERE ha.pk IS NULL"

he8_insert_flaechen: " 
INSERT INTO flaechen ( 
    flnam, haltnam, neigkl, regenschreiber, 
    abflussparameter, aufteilen, kommentar, createdat, geom
) 
SELECT
    fl.Name AS flnam, 
    fl.Haltung AS haltnam, 
    fl.Neigungsklasse AS neigkl, 
    fl.Regenschreiber AS regenschreiber, 
    fl.Parametersatz AS abflussparameter,
    false AS aufteilen, 
    fl.Kommentar AS kommentar, 
    fl.Lastmodified AS createdat, 
    SetSRID(fl.Geometry, :epsg) AS geom
FROM he.Flaeche AS fl"

he8_insert_linkfl: "
INSERT INTO linkfl (
    flnam, 
    haltnam, 
    abflusstyp,
    speicherzahl,
    speicherkonst,
    fliesszeitkanal,
    fliesszeitflaeche,
    glink
)
SELECT
    fl.Name                     AS flnam,
    fl.Haltung                  AS haltnam,
    at.abflusstyp               AS abflusstyp,
    fl.AnzahlSpeicher           AS speicherzahl,
    fl.Speicherkonstante        AS speicherkonst,
    fl.LaengsteFliesszeitKanal  AS fliesszeitkanal,
    CASE fl.BerechnungSpeicherkonstante 
        WHEN 1 THEN fl.FliesszeitOberflaeche
        WHEN 2 THEN fl.Schwerpunktlaufzeit
        ELSE 0. END             AS fliesszeitflaeche,  
    SetSRID(MakeLine(
        PointOnSurface(Buffer(fl.Geometry, -1.1*(:fangradius))), 
        Centroid(ro.Geometry)
        ),  :epsg)              AS link
    FROM he.Rohr AS ro
    INNER JOIN he.Flaeche AS fl
    ON fl.Haltung = ro.Name
    LEFT JOIN abflusstypen AS at
    ON at.he_nr = fl.BerechnungSpeicherkonstante
    WHERE fl.Geometry IS NOT NULL AND ro.Geometry IS NOT NULL"

he8_insert_abflussparameter_all: "
INSERT INTO abflussparameter (
    apnam, anfangsabflussbeiwert, endabflussbeiwert, 
    benetzungsverlust, muldenverlust, 
    benetzung_startwert, mulden_startwert, 
    bodenklasse, kommentar, createdat 
)
SELECT 
    ap_he.name AS apnam, 
    ap_he.AbflussbeiwertAnfang AS anfangsabflussbeiwert,
    ap_he.AbflussbeiwertEnde AS endabflussbeiwert,
    ap_he.Benetzungsverlust AS benetzungsverlust, 
    ap_he.Muldenverlust AS muldenverlust,
    ap_he.BenetzungSpeicherStart AS benetzung_startwert, 
    ap_he.MuldenauffuellgradStart AS mulden_startwert, 
    ap_he.Bodenklasse AS bodenklasse,
    ap_he.Kommentar AS kommentar, 
    ap_he.Lastmodified AS createdat 
FROM he.AbflussParameter AS ap_he
LEFT JOIN   abflussparameter as ap_qk   ON ap_he.Name = ap_qk.apnam
WHERE ap_qk.pk IS NULL
GROUP BY ap_he.Name"

he8_insert_abflussparameter_filtered: "
INSERT INTO abflussparameter (
    apnam, anfangsabflussbeiwert, endabflussbeiwert, 
    benetzungsverlust, muldenverlust, 
    benetzung_startwert, mulden_startwert, 
    bodenklasse, kommentar, createdat 
)
SELECT 
    ap_he.name AS apnam, 
    ap_he.AbflussbeiwertAnfang AS anfangsabflussbeiwert,
    ap_he.AbflussbeiwertEnde AS endabflussbeiwert,
    ap_he.Benetzungsverlust AS benetzungsverlust, 
    ap_he.Muldenverlust AS muldenverlust,
    ap_he.BenetzungSpeicherStart AS benetzung_startwert, 
    ap_he.MuldenauffuellgradStart AS mulden_startwert, 
    ap_he.Bodenklasse AS bodenklasse,
    ap_he.Kommentar AS kommentar, 
    ap_he.Lastmodified AS createdat 
FROM he.AbflussParameter AS ap_he
LEFT JOIN   abflussparameter as ap_qk   ON ap_he.Name = ap_qk.apnam
INNER JOIN  he.Flaeche AS fl_he         ON fl_he.Parametersatz = ap_he.Name
WHERE ap_qk.pk IS NULL
GROUP BY ap_he.Name"

he8_insert_bodenklasse_all: "
INSERT INTO bodenklassen (
    bknam, infiltrationsrateanfang, infiltrationsrateende, 
    infiltrationsratestart, rueckgangskonstante, 
    regenerationskonstante, saettigungswassergehalt, 
    kommentar, createdat
)
SELECT
    bk_he.Name AS bknam, 
    bk_he.InfiltrationsrateAnfang AS infiltrationsrateanfang, 
    bk_he.InfiltrationsrateEnde AS infiltrationsrateende, 
    bk_he.InfiltrationsrateStart AS infiltrationsratestart, 
    bk_he.Rueckgangskonstante AS rueckgangskonstante, 
    bk_he.Regenerationskonstante AS regenerationskonstante, 
    bk_he.Saettigungswassergehalt AS saettigungswassergehalt, 
    bk_he.Kommentar AS kommentar, 
    bk_he.LastModified AS createdat
FROM he.Bodenklasse AS bk_he
LEFT JOIN bodenklassen AS bk_qk         ON bk_he.Name = bk_qk.bknam
WHERE bk_qk.pk IS NULL
GROUP BY bk_he.Name"

he8_insert_bodenklasse_filtered: "
INSERT INTO bodenklassen (
    bknam, infiltrationsrateanfang, infiltrationsrateende, 
    infiltrationsratestart, rueckgangskonstante, 
    regenerationskonstante, saettigungswassergehalt, 
    kommentar, createdat
)
SELECT
    bk_he.Name AS bknam, 
    bk_he.InfiltrationsrateAnfang AS infiltrationsrateanfang, 
    bk_he.InfiltrationsrateEnde AS infiltrationsrateende, 
    bk_he.InfiltrationsrateStart AS infiltrationsratestart, 
    bk_he.Rueckgangskonstante AS rueckgangskonstante, 
    bk_he.Regenerationskonstante AS regenerationskonstante, 
    bk_he.Saettigungswassergehalt AS saettigungswassergehalt, 
    bk_he.Kommentar AS kommentar, 
    bk_he.LastModified AS createdat
FROM he.Bodenklasse AS bk_he
LEFT JOIN bodenklassen AS bk_qk         ON bk_he.Name = bk_qk.bknam
INNER JOIN he.abflussparameter AS ap_he ON ap_he.bodenklasse = bk_he.Name
WHERE bk_qk.pk IS NULL
GROUP BY bk_he.Name"

he8_insert_profiles_all: "
INSERT INTO profile (
    profilnam, 
    he_nr)
SELECT
    pr_he.Name,
    68
FROM he.Sonderprofil AS pr_he
LEFT JOIN profile AS pr_qk
ON pr_he.Name = pr_qk.profilnam
WHERE pr_he.Id IS NULL
GROUP BY pr_he.Name"

he8_insert_profiles_filtered: "
INSERT INTO profile (
    profilnam, 
    he_nr)
SELECT
    pr_he.Name,
    68
FROM he.Sonderprofil AS pr_he
LEFT JOIN profile AS pr_qk
ON pr_he.Name = pr_qk.profilnam
INNER JOIN (
    SELECT Sonderprofilbezeichnung
    FROM he.rohr
    WHERE Profiltyp = 68
    ) AS ha_he
ON ha_he.Sonderprofilbezeichnung = pr_he.Name
WHERE pr_he.Id IS NULL
GROUP BY pr_he.Name"

he8_insert_aussengebiete: "
INSERT INTO aussengebiete (
    gebnam, schnam, 
    hoeheob, hoeheun, 
    fliessweg, basisabfluss, 
    cn, regenschreiber,
    kommentar, createdat, 
    geom 
)
SELECT
    ag_he.Name AS gebnam, 
    ag_he.Schacht AS schnam, 
    ag_he.HoeheOben AS hoeheob, 
    ag_he.HoeheUnten AS hoeheun, 
    ag_he.FliessLaenge AS fliessweg, 
    ag_he.BasisZufluss AS basisabfluss, 
    ag_he.CNMittelwert AS cn, 
    ag_he.Regenschreiber AS regenschreiber, 
    ag_he.Kommentar AS kommentar, 
    ag_he.LastModified AS createdat,
    CastToMultiPolygon(
        MakePolygon(
            MakeCircle(
                x(ag_he.Geometry),
                y(ag_he.Geometry),
                sqrt(ag_he.Gesamtflaeche), 
                :epsg
    )   )   ) AS geom
FROM he.Aussengebiet AS ag_he
LEFT JOIN aussengebiete AS ag_qk
ON ag_he.Name = ag_qk.gebnam
WHERE ag_qk.pk IS NULL"

he8_insert_direkteinleiter: "
INSERT INTO einleit (
    elnam, haltnam, 
    zufluss, ew, 
    einzugsgebiet,
    kommentar, createdat,
    geom
)
SELECT
    el_he.Name              AS elnam,
    el_he.Rohr              AS haltnam,
    el_he.Zufluss           AS zufluss,
    el_he.Einwohner         AS ew,
    el_he.Teileinzugsgebiet AS einzugsgebiet,
    el_he.Kommentar         AS kommentar,
    el_he.LastModified      AS createdat,
    SetSRID(el_he.Geometry,  :epsg
    )                       AS geom
FROM Einzeleinleiter AS el_he
LEFT JOIN einleit AS el_qk
ON el_he.Name = el_qk.elnam
WHERE el_qk.pk IS NULL"

he8_insert_einzugsgebiete: "
INSERT INTO einzugsgebiete (
    tgnam, ewdichte, wverbrauch, stdmittel,
    fremdwas, kommentar, createdat
) 
SELECT 
    eg_he.Name AS tgnam,
    eg_he.Einwohnerdichte AS ewdichte,
    eg_he.Wasserverbrauch AS wverbrauch,
    eg_he.Stundenmittel AS stdmittel,
    eg_he.Fremdwasseranteil AS fremdwas,
    eg_he.Kommentar AS kommentar,
    eg_he.LastModified AS createdat
FROM Teileinzugsgebiet AS eg_he
LEFT JOIN einzugsgebiete AS eg_qk
ON eg_he.Name = eg_qk.tgnam
WHERE eg_qk.pk IS NULL"

he8_insert_haltungsflaechen_einzel: "
INSERT INTO tezg (
    flnam, haltnam,
    abflussparameter,
    kommentar, createdat,
    geom
)
SELECT
    eg_he.Name AS flnam, 
    eg_he.Haltung AS haltnam, 
    '$Default_Unbef' AS abflussparameter,
    eg_he.Kommentar AS kommentar, 
    eg_he.LastModified AS createdat, 
    SetSRID(eg_he.Geometry, :epsg) AS geom
FROM he.GipsEinzugsflaeche AS eg_he
LEFT JOIN tezg AS eg_qk
ON eg_he.Name = eg_qk.flnam
WHERE (
    (IsEinzugsflaeche and :choice_ef) or
    (IsHaltungsflaeche and :choice_hf)
) and eg_qk.pk IS NULL"

he8_insert_haltungsflaechen_teilfl: "
INSERT INTO einleit (
    elnam, haltnam, 
    zufluss, ew, 
    einzugsgebiet,
    kommentar, createdat,
    geom
)
SELECT
    eg_he.Name                              AS elnam, 
    eg_he.Haltung                           AS haltnam, 
    area(eg_he.Geometry)/10000. 
        * coalesce(te_he.Einwohnerdichte, 100)
        * coalesce(te_he.Wasserverbrauch, 130)
        * ( 24. / coalesce(te_he.Stundenmittel, 12)
            + coalesce(te_he.Fremdwasseranteil))
                                            AS zufluss,
    area(eg_he.Geometry)/10000. * te_he.Einwohnerdichte
                                            AS ew,
    eg_he.Name                              AS einzugsgebiet,
    eg_he.Kommentar                         AS kommentar, 
    eg_he.LastModified                      AS createdat, 
    SetSRID(eg_he.Geometry, :epsg)    AS geom
FROM he.GipsEinzugsflaeche      AS eg_he
LEFT JOIN he.Teileinzugsgebiet  AS te_he
LEFT JOIN tezg                  AS eg_qk
ON eg_he.Name = eg_qk.flnam
WHERE (IsTwEinzugsflaeche and :choice_tf)
    AND eg_qk.pk IS NULL"

he8_get_id: "
SELECT NextId, Version FROM he.Itwh$ProgInfo"

he8_nextid: "
UPDATE he.Itwh$ProgInfo SET NextId = ?"

he8_update_schaechte_all: "
UPDATE he.Schacht SET (
    Deckelhoehe, 
    Sohlhoehe,
    Gelaendehoehe,
    Art,
    Planungsstatus, LastModified,
    Durchmesser, Geometry) =
SELECT 
    qk.deckelhoehe, 
    qk.sohlhoehe,
    qk.gelaendehoehe,
    qk.art, 
    qk.planungsstatus,
    qk.lastmodified,
    qk.durchmesser,
    qk.geometry
FROM
( SELECT
    schaechte.deckelhoehe AS deckelhoehe,
    schaechte.sohlhoehe AS sohlhoehe,
    coalesce(schaechte.deckelhoehe, 0.0) AS gelaendehoehe, 
    1 AS art, 
    st.he_nr AS planungsstatus, 
    coalesce(schaechte.createdat, datetime('now'))
                            AS lastmodified, 
    schaechte.durchm*1000. AS durchmesser,
    SetSRID(schaechte.geop, -1) AS geometry
  FROM schaechte
  LEFT JOIN simulationsstatus AS st
  ON schaechte.simstatus = st.bezeichnung
  WHERE schaechte.schachttyp = 'Schacht') AS qk
WHERE he.Schacht.Name = qk.schnam"

he8_update_schaechte_sel: "
UPDATE he.Schacht SET (
    Deckelhoehe, 
    Sohlhoehe,
    Gelaendehoehe,
    Art,
    Planungsstatus, LastModified,
    Durchmesser, Geometry) =
SELECT 
    qk.deckelhoehe, 
    qk.sohlhoehe,
    qk.gelaendehoehe,
    qk.art, 
    qk.planungsstatus,
    qk.lastmodified,
    qk.durchmesser,
    qk.geometry
FROM (
    SELECT
        schaechte.deckelhoehe AS deckelhoehe,
        schaechte.sohlhoehe AS sohlhoehe,
        coalesce(schaechte.deckelhoehe, 0.0) AS gelaendehoehe, 
        1 AS art, 
        coalesce(st.he_nr, 1) AS planungsstatus, 
        coalesce(schaechte.createdat, datetime('now'))
                                AS lastmodified, 
        schaechte.durchm*1000. AS durchmesser,
        SetSRID(schaechte.geop, -1) AS geometry
    FROM schaechte
    JOIN schaechte_sel AS sel ON sel.pk = schaechte.pk
    LEFT JOIN simulationsstatus AS st
    ON schaechte.simstatus = st.bezeichnung
    WHERE schaechte.schachttyp = 'Schacht') AS qk
WHERE he.Schacht.Name = qk.schnam"

he8_count_he_schaechte: "
SELECT count(*) FROM he.Schacht"

he8_append_schaechte_all: "
INSERT INTO he.Schacht (
    Id,
    Name, Deckelhoehe, Sohlhoehe, 
    Gelaendehoehe, Art,
    Planungsstatus, LastModified, Durchmesser, Geometry)
SELECT
    {nr0} + row_number() OVER (ORDER BY schaechte.schnam) AS Id, 
    schaechte.schnam AS name, 
    coalesce(schaechte.deckelhoehe, 0.0) AS deckelhoehe, 
    coalesce(schaechte.sohlhoehe, 0.0) AS sohlhoehe,
    coalesce(schaechte.deckelhoehe, 0.0) AS gelaendehoehe, 
    1 AS art, 
    coalesce(st.he_nr, 1) AS planungsstatus, 
    coalesce(schaechte.createdat, datetime('now')) AS lastmodified, 
    coalesce(schaechte.durchm, 0.0)*1000. AS durchmesser,
    SetSrid(schaechte.geop, -1) AS geometry
FROM schaechte
LEFT JOIN simulationsstatus AS st   ON schaechte.simstatus = st.bezeichnung
LEFT JOIN he.Schacht AS sh          ON sh.Schacht = schaechte.schnam
WHERE he.Schacht IS NULL"

he8_append_schaechte_sel: "
INSERT INTO he.Schacht (
    Id,
    Name, Deckelhoehe, Sohlhoehe, 
    Gelaendehoehe, Art,
    Planungsstatus, LastModified, Durchmesser, Geometry)
SELECT
    {nr0} + row_number() OVER (ORDER BY schaechte.schnam) AS Id, 
    schaechte.schnam AS name, 
    coalesce(schaechte.deckelhoehe, 0.0) AS deckelhoehe, 
    coalesce(schaechte.sohlhoehe, 0.0) AS sohlhoehe,
    coalesce(schaechte.deckelhoehe, 0.0) AS gelaendehoehe, 
    1 AS art, 
    coalesce(st.he_nr, 1) AS planungsstatus, 
    coalesce(schaechte.createdat, datetime('now')) AS lastmodified, 
    coalesce(schaechte.durchm, 0.0)*1000. AS durchmesser,
    SetSrid(schaechte.geop, -1) AS geometry
FROM schaechte
LEFT JOIN simulationsstatus AS st   ON schaechte.simstatus = st.bezeichnung
JOIN schaechte_sel AS sel ON sel.pk = schaechte.pk
LEFT JOIN he.Schacht AS sh          ON sh.Schacht = schaechte.schnam
WHERE he.Schacht IS NULL"

he8_update_speicher_all: "
UPDATE he.Speicherschacht SET
(   Sohlhoehe, Gelaendehoehe, 
    Scheitelhoehe,
    Planungsstatus,
    LastModified, Kommentar, Geometry
    ) =
SELECT
    qk.sohlhoehe,
    qk.gelaendehoehe,
    qk.scheitelhoehe,
    qk.planungsstatus,
    qk.lastmodified,
    qk.kommentar,
    qk.geometry
FROM (
    SELECT
        schaechte.sohlhoehe AS sohlhoehe, 
        coalesce(schaechte.deckelhoehe, 0.0) AS gelaendehoehe,
        schaechte.deckelhoehe AS scheitelhoehe,
        coalesce(st.he_nr, 1) AS planungsstatus, 
        coalesce(schaechte.createdat, datetime('now')) AS lastmodified, 
        schaechte.kommentar AS kommentar,
        SetSrid(schaechte.geop, -1) AS geometry
    FROM schaechte
    LEFT JOIN simulationsstatus AS st
    ON schaechte.simstatus = st.bezeichnung
    WHERE schaechte.schachttyp = 'Speicher') AS qk
WHERE he.Speicherschacht.Name = schaechte.schnam"

he8_update_speicher_sel: "
UPDATE he.Speicherschacht SET
(   Sohlhoehe, Gelaendehoehe, 
    Scheitelhoehe,
    Planungsstatus,
    LastModified, Kommentar, Geometry
    ) =
SELECT
    qk.sohlhoehe,
    qk.gelaendehoehe,
    qk.scheitelhoehe,
    qk.planungsstatus,
    qk.lastmodified,
    qk.kommentar,
    qk.geometry
FROM (
    SELECT
        schaechte.sohlhoehe AS sohlhoehe, 
        coalesce(schaechte.deckelhoehe, 0.0) AS gelaendehoehe,
        schaechte.deckelhoehe AS scheitelhoehe,
        coalesce(st.he_nr, 1) AS planungsstatus, 
        coalesce(schaechte.createdat, datetime('now')) AS lastmodified, 
        schaechte.kommentar AS kommentar,
        SetSrid(schaechte.geop, -1) AS geometry
    FROM schaechte
    JOIN schaechte_sel AS sel ON sel.pk = schaechte.pk
    LEFT JOIN simulationsstatus AS st
    ON schaechte.simstatus = st.bezeichnung
    WHERE schaechte.schachttyp = 'Speicher') AS qk
WHERE he.Speicherschacht.Name = schaechte.schnam"

he8_count_he_speicher: "
SELECT count(*) FROM he.Speicherschacht"

he8_append_speicher_all: "
INSERT INTO he.Speicherschacht
( Id, Name, Typ, Sohlhoehe,
  Gelaendehoehe, Art, AnzahlKanten,
  Scheitelhoehe, HoeheVollfuellung,
  Planungsstatus,
  LastModified, Kommentar, Geometry)
SELECT
  {nr0} + row_number() OVER (ORDER BY schaechte.schnam) AS Id, 
  schaechte.schnam AS name, 
  1 AS typ, 
  schaechte.sohlhoehe AS sohlhoehe, 
  coalesce(schaechte.deckelhoehe, 0.0) AS gelaendehoehe,
  1 AS art, 
  2 AS anzahlkanten, 
  schaechte.deckelhoehe AS scheitelhoehe,
  schaechte.deckelhoehe AS hoehevollfuellung,
  st.he_nr AS planungsstatus, 
  coalesce(schaechte.createdat, datetime('now')) AS lastmodified, 
  schaechte.kommentar AS kommentar,
  SetSrid(schaechte.geop, -1) AS geometry
FROM schaechte
LEFT JOIN simulationsstatus AS st
ON schaechte.simstatus = st.bezeichnung
WHERE schaechte.schnam NOT IN (SELECT Name FROM he.Speicherschacht) and 
      schaechte.schachttyp = 'Speicher'"

he8_append_speicher_sel: "
INSERT INTO he.Speicherschacht
( Id, Name, Typ, Sohlhoehe,
  Gelaendehoehe, Art, AnzahlKanten,
  Scheitelhoehe, HoeheVollfuellung,
  Planungsstatus,
  LastModified, Kommentar, Geometry)
SELECT
  {nr0} + row_number() OVER (ORDER BY schaechte.schnam) AS Id, 
  schaechte.schnam AS name, 
  1 AS typ, 
  schaechte.sohlhoehe AS sohlhoehe, 
  coalesce(schaechte.deckelhoehe, 0.0) AS gelaendehoehe,
  1 AS art, 
  2 AS anzahlkanten, 
  schaechte.deckelhoehe AS scheitelhoehe,
  schaechte.deckelhoehe AS hoehevollfuellung,
  st.he_nr AS planungsstatus, 
  coalesce(schaechte.createdat, datetime('now')) AS lastmodified, 
  schaechte.kommentar AS kommentar,
  SetSrid(schaechte.geop, -1) AS geometry
FROM schaechte
LEFT JOIN simulationsstatus AS st
ON schaechte.simstatus = st.bezeichnung
WHERE schaechte.schnam NOT IN (SELECT Name FROM he.Speicherschacht) and 
      schaechte.schachttyp = 'Speicher'"

he8_count_he_auslaesse: "
SELECT count(*) FROM he.Auslass"

